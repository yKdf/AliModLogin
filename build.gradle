buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '6.0.16', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'java'
apply plugin: 'maven-publish'

version = '1.0.0'
group = 'com.aliloginmod'
archivesBaseName = 'aliloginmod'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: '1.20.1'
    
    runs {
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                aliloginmod {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven {
        name = 'MinecraftForge'
        url = 'https://maven.minecraftforge.net/'
    }
    mavenCentral()
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.3.0'
    
    // JSON processing
    implementation 'com.google.code.gson:gson:2.10.1'
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    // Configura o diretório de saída do JAR para o servidor
    destinationDirectory = file('C:\\Users\\aliss\\Desktop\\Servidor Forge 1.20.1\\mods')
    
    manifest {
        attributes([
                "Specification-Title"     : "aliloginmod",
                "Specification-Vendor"    : "aliloginmod",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.version,
                "Implementation-Vendor"   : "aliloginmod",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}